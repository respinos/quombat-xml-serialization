//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package gov.loc.mets.v2;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.namespace.QName;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAnyAttribute;
import jakarta.xml.bind.annotation.XmlAnyElement;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlID;
import jakarta.xml.bind.annotation.XmlIDREF;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.adapters.CollapsedStringAdapter;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.w3c.dom.Element;


/**
 * mdType: Complex Type for Metadata Sections
 * 			A generic framework for pointing to/including metadata within a METS document, a la Warwick Framework.
 * 
 * <p>Java class for mdType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="mdType">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <all>
 *         <element name="mdRef" minOccurs="0">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 <attGroup ref="{http://www.loc.gov/METS/v2}METADATA"/>
 *                 <attGroup ref="{http://www.loc.gov/METS/v2}FILECORE"/>
 *                 <attGroup ref="{http://www.loc.gov/METS/v2}LOCATION"/>
 *                 <attribute name="ID" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *                 <attribute name="LABEL" type="{http://www.w3.org/2001/XMLSchema}string" />
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *         <element name="mdWrap" minOccurs="0">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 <choice>
 *                   <element name="binData" type="{http://www.w3.org/2001/XMLSchema}base64Binary" minOccurs="0"/>
 *                   <element name="xmlData" minOccurs="0">
 *                     <complexType>
 *                       <complexContent>
 *                         <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           <sequence>
 *                             <any processContents='lax' maxOccurs="unbounded"/>
 *                           </sequence>
 *                         </restriction>
 *                       </complexContent>
 *                     </complexType>
 *                   </element>
 *                 </choice>
 *                 <attGroup ref="{http://www.loc.gov/METS/v2}FILECORE"/>
 *                 <attGroup ref="{http://www.loc.gov/METS/v2}METADATA"/>
 *                 <attribute name="ID" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *                 <attribute name="LABEL" type="{http://www.w3.org/2001/XMLSchema}string" />
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *       </all>
 *       <attribute name="ID" use="required" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *       <attribute name="USE" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       <attribute name="GROUPID" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       <attribute name="MDID" type="{http://www.w3.org/2001/XMLSchema}IDREFS" />
 *       <attribute name="CREATED" type="{http://www.w3.org/2001/XMLSchema}dateTime" />
 *       <attribute name="STATUS" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       <anyAttribute processContents='lax' namespace='##other'/>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "mdType", propOrder = {

})
public class MdType {

    /**
     * The metadata reference element <mdRef> element is a generic element used throughout the METS schema to provide a pointer to metadata which resides outside the METS document.  NB: <mdRef> is an empty element.
     * 
     */
    protected MdType.MdRef mdRef;
    /**
     * A metadata wrapper element <mdWrap> provides a wrapper around metadata embedded within a METS document. The element is repeatable. Such metadata can be in one of two forms: 1) XML-encoded metadata, with the XML-encoding identifying itself as belonging to a namespace other than the METS document namespace. 2) Any arbitrary binary or textual form, PROVIDED that the metadata is Base64 encoded and wrapped in a <binData> element within the internal descriptive metadata element.
     * 
     */
    protected MdType.MdWrap mdWrap;
    /**
     * ID (ID/R): This attribute uniquely identifies the element within the METS document, and would allow the element to be referenced unambiguously from another element or document via an IDREF or an XPTR. The ID attribute on the <md> element is required, and its value should be referenced from one or more MDID attributes that are associated with other elements in the METS document. The following elements support references to a <md> element via a MDID attribute: <file>, <fileGrp> <stream>, <div>, <metsHdr>, <md>. For more information on using ID attributes for internal and external linking see Chapter 4 of the METS Primer.
     * 
     */
    @XmlAttribute(name = "ID", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    @XmlSchemaType(name = "ID")
    protected String id;
    /**
     * USE: Specifies the purpose of metadata in this section.
     *         Suggested attribute values: https://github.com/mets/METS-schema/wiki/METS2-Suggested-Attribute-Values#use-md-mdgrp
     * 
     */
    @XmlAttribute(name = "USE")
    protected String use;
    /**
     * GROUPID (string/O): This identifier is used to indicate that different metadata sections may be considered as part of a group. Two metadata sections with the same GROUPID value are to be considered part of the same group. For example this facility might be used to group changed versions of the same metadata if previous versions are maintained in a file for tracking purposes.
     * 
     */
    @XmlAttribute(name = "GROUPID")
    protected String groupid;
    /**
     * MDID (IDREFS/O): Contains the ID attribute values of the <md> elements within the <mdSec> of the METS document that contain metadata pertaining to the current <md> element. Typically used in this context to reference preservation metadata (use="DIGIPROV") which applies to the current metadata. For more information on using METS IDREFS and IDREF type attributes for internal linking, see Chapter 4 of the METS Primer.
     * 
     */
    @XmlAttribute(name = "MDID")
    @XmlIDREF
    @XmlSchemaType(name = "IDREFS")
    protected List<Object> mdid;
    /**
     * CREATED (dateTime/O): Specifies the date and time of creation for the metadata.
     * 
     */
    @XmlAttribute(name = "CREATED")
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar created;
    /**
     * STATUS (string/O): Indicates the status of this metadata (e.g., superseded, current, etc.).
     * 
     */
    @XmlAttribute(name = "STATUS")
    protected String status;
    @XmlAnyAttribute
    private Map<QName, String> otherAttributes = new HashMap<>();

    /**
     * The metadata reference element <mdRef> element is a generic element used throughout the METS schema to provide a pointer to metadata which resides outside the METS document.  NB: <mdRef> is an empty element.
     * 
     * @return
     *     possible object is
     *     {@link MdType.MdRef }
     *     
     */
    public MdType.MdRef getMdRef() {
        return mdRef;
    }

    /**
     * Sets the value of the mdRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link MdType.MdRef }
     *     
     * @see #getMdRef()
     */
    public void setMdRef(MdType.MdRef value) {
        this.mdRef = value;
    }

    /**
     * A metadata wrapper element <mdWrap> provides a wrapper around metadata embedded within a METS document. The element is repeatable. Such metadata can be in one of two forms: 1) XML-encoded metadata, with the XML-encoding identifying itself as belonging to a namespace other than the METS document namespace. 2) Any arbitrary binary or textual form, PROVIDED that the metadata is Base64 encoded and wrapped in a <binData> element within the internal descriptive metadata element.
     * 
     * @return
     *     possible object is
     *     {@link MdType.MdWrap }
     *     
     */
    public MdType.MdWrap getMdWrap() {
        return mdWrap;
    }

    /**
     * Sets the value of the mdWrap property.
     * 
     * @param value
     *     allowed object is
     *     {@link MdType.MdWrap }
     *     
     * @see #getMdWrap()
     */
    public void setMdWrap(MdType.MdWrap value) {
        this.mdWrap = value;
    }

    /**
     * ID (ID/R): This attribute uniquely identifies the element within the METS document, and would allow the element to be referenced unambiguously from another element or document via an IDREF or an XPTR. The ID attribute on the <md> element is required, and its value should be referenced from one or more MDID attributes that are associated with other elements in the METS document. The following elements support references to a <md> element via a MDID attribute: <file>, <fileGrp> <stream>, <div>, <metsHdr>, <md>. For more information on using ID attributes for internal and external linking see Chapter 4 of the METS Primer.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getID() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getID()
     */
    public void setID(String value) {
        this.id = value;
    }

    /**
     * USE: Specifies the purpose of metadata in this section.
     *         Suggested attribute values: https://github.com/mets/METS-schema/wiki/METS2-Suggested-Attribute-Values#use-md-mdgrp
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUSE() {
        return use;
    }

    /**
     * Sets the value of the use property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getUSE()
     */
    public void setUSE(String value) {
        this.use = value;
    }

    /**
     * GROUPID (string/O): This identifier is used to indicate that different metadata sections may be considered as part of a group. Two metadata sections with the same GROUPID value are to be considered part of the same group. For example this facility might be used to group changed versions of the same metadata if previous versions are maintained in a file for tracking purposes.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getGROUPID() {
        return groupid;
    }

    /**
     * Sets the value of the groupid property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getGROUPID()
     */
    public void setGROUPID(String value) {
        this.groupid = value;
    }

    /**
     * MDID (IDREFS/O): Contains the ID attribute values of the <md> elements within the <mdSec> of the METS document that contain metadata pertaining to the current <md> element. Typically used in this context to reference preservation metadata (use="DIGIPROV") which applies to the current metadata. For more information on using METS IDREFS and IDREF type attributes for internal linking, see Chapter 4 of the METS Primer.
     * 
     * Gets the value of the mdid property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the mdid property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getMDID().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Object }
     * </p>
     * 
     * 
     * @return
     *     The value of the mdid property.
     */
    public List<Object> getMDID() {
        if (mdid == null) {
            mdid = new ArrayList<>();
        }
        return this.mdid;
    }

    /**
     * CREATED (dateTime/O): Specifies the date and time of creation for the metadata.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getCREATED() {
        return created;
    }

    /**
     * Sets the value of the created property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     * @see #getCREATED()
     */
    public void setCREATED(XMLGregorianCalendar value) {
        this.created = value;
    }

    /**
     * STATUS (string/O): Indicates the status of this metadata (e.g., superseded, current, etc.).
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSTATUS() {
        return status;
    }

    /**
     * Sets the value of the status property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getSTATUS()
     */
    public void setSTATUS(String value) {
        this.status = value;
    }

    /**
     * Gets a map that contains attributes that aren't bound to any typed property on this class.
     * 
     * <p>
     * the map is keyed by the name of the attribute and 
     * the value is the string value of the attribute.
     * 
     * the map returned by this method is live, and you can add new attribute
     * by updating the map directly. Because of this design, there's no setter.
     * 
     * 
     * @return
     *     always non-null
     */
    public Map<QName, String> getOtherAttributes() {
        return otherAttributes;
    }


    /**
     * <p>Java class for anonymous complex type</p>.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.</p>
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <attGroup ref="{http://www.loc.gov/METS/v2}METADATA"/>
     *       <attGroup ref="{http://www.loc.gov/METS/v2}FILECORE"/>
     *       <attGroup ref="{http://www.loc.gov/METS/v2}LOCATION"/>
     *       <attribute name="ID" type="{http://www.w3.org/2001/XMLSchema}ID" />
     *       <attribute name="LABEL" type="{http://www.w3.org/2001/XMLSchema}string" />
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class MdRef {

        /**
         * ID (ID/O): This attribute uniquely identifies the element within the METS document, and would allow the element to be referenced unambiguously from another element or document via an IDREF or an XPTR. For more information on using ID attributes for internal and external linking see Chapter 4 of the METS Primer.
         * 
         */
        @XmlAttribute(name = "ID")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        @XmlID
        @XmlSchemaType(name = "ID")
        protected String id;
        /**
         * LABEL (string/O): Provides a label to display to the viewer of the METS document that identifies the associated metadata.
         * 
         */
        @XmlAttribute(name = "LABEL")
        protected String label;
        /**
         * MDTYPE (string/R): Is used to indicate the type of the associated metadata. 
         *           Suggested attribute values: https://github.com/mets/METS-schema/wiki/METS2-Suggested-Attribute-Values#mdtype-mdref-mdwrap
         * 
         */
        @XmlAttribute(name = "MDTYPE", required = true)
        protected String mdtype;
        /**
         * MDTYPEVERSION(string/O): Provides a means for recording the version of the type of metadata (as recorded in the MDTYPE attribute) that is being used.  This may represent the version of the underlying data dictionary or metadata model rather than a schema version.
         * 
         */
        @XmlAttribute(name = "MDTYPEVERSION")
        protected String mdtypeversion;
        /**
         * MIMETYPE (string/O): The IANA MIME media type for the associated file or wrapped content. Some values for this attribute can be found on the IANA website.
         * 
         */
        @XmlAttribute(name = "MIMETYPE")
        protected String mimetype;
        /**
         * SIZE (long/O): Specifies the size in bytes of the associated file or wrapped content.
         * 
         */
        @XmlAttribute(name = "SIZE")
        protected Long size;
        /**
         * CREATED (dateTime/O): Specifies the date and time of creation for the associated file or wrapped content.
         * 
         */
        @XmlAttribute(name = "CREATED")
        @XmlSchemaType(name = "dateTime")
        protected XMLGregorianCalendar created;
        /**
         * CHECKSUM (string/O): Provides a checksum value for the associated file or wrapped content.
         * 
         */
        @XmlAttribute(name = "CHECKSUM")
        protected String checksum;
        /**
         * CHECKSUMTYPE (enumerated string/O): Specifies the checksum algorithm used to produce the value contained in the CHECKSUM attribute. 
         *           Suggested attribute values: https://github.com/mets/METS-schema/wiki/METS2-Suggested-Attribute-Values#checksumtype-mdref-mdwrap
         * 
         */
        @XmlAttribute(name = "CHECKSUMTYPE")
        protected String checksumtype;
        /**
         * LOCREF (string/R): Specifies the location for resources. This may be a directly-resolvable URL (preferred for interoperability), or it may require the use of an external resolver or be system-specific. The LOCTYPE attribute identifies the type of location.
         * 
         */
        @XmlAttribute(name = "LOCREF", required = true)
        protected String locref;
        /**
         * LOCTYPE (string/R): Specifies the locator type used in the LOCREF attribute.
         *             Suggested attribute values: https://github.com/mets/METS-schema/wiki/METS2-Suggested-Attribute-Values#loctype-mptr-mdref-flocat
         * 
         */
        @XmlAttribute(name = "LOCTYPE", required = true)
        protected String loctype;

        /**
         * ID (ID/O): This attribute uniquely identifies the element within the METS document, and would allow the element to be referenced unambiguously from another element or document via an IDREF or an XPTR. For more information on using ID attributes for internal and external linking see Chapter 4 of the METS Primer.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getID() {
            return id;
        }

        /**
         * Sets the value of the id property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getID()
         */
        public void setID(String value) {
            this.id = value;
        }

        /**
         * LABEL (string/O): Provides a label to display to the viewer of the METS document that identifies the associated metadata.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getLABEL() {
            return label;
        }

        /**
         * Sets the value of the label property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getLABEL()
         */
        public void setLABEL(String value) {
            this.label = value;
        }

        /**
         * MDTYPE (string/R): Is used to indicate the type of the associated metadata. 
         *           Suggested attribute values: https://github.com/mets/METS-schema/wiki/METS2-Suggested-Attribute-Values#mdtype-mdref-mdwrap
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getMDTYPE() {
            return mdtype;
        }

        /**
         * Sets the value of the mdtype property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getMDTYPE()
         */
        public void setMDTYPE(String value) {
            this.mdtype = value;
        }

        /**
         * MDTYPEVERSION(string/O): Provides a means for recording the version of the type of metadata (as recorded in the MDTYPE attribute) that is being used.  This may represent the version of the underlying data dictionary or metadata model rather than a schema version.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getMDTYPEVERSION() {
            return mdtypeversion;
        }

        /**
         * Sets the value of the mdtypeversion property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getMDTYPEVERSION()
         */
        public void setMDTYPEVERSION(String value) {
            this.mdtypeversion = value;
        }

        /**
         * MIMETYPE (string/O): The IANA MIME media type for the associated file or wrapped content. Some values for this attribute can be found on the IANA website.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getMIMETYPE() {
            return mimetype;
        }

        /**
         * Sets the value of the mimetype property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getMIMETYPE()
         */
        public void setMIMETYPE(String value) {
            this.mimetype = value;
        }

        /**
         * SIZE (long/O): Specifies the size in bytes of the associated file or wrapped content.
         * 
         * @return
         *     possible object is
         *     {@link Long }
         *     
         */
        public Long getSIZE() {
            return size;
        }

        /**
         * Sets the value of the size property.
         * 
         * @param value
         *     allowed object is
         *     {@link Long }
         *     
         * @see #getSIZE()
         */
        public void setSIZE(Long value) {
            this.size = value;
        }

        /**
         * CREATED (dateTime/O): Specifies the date and time of creation for the associated file or wrapped content.
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getCREATED() {
            return created;
        }

        /**
         * Sets the value of the created property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getCREATED()
         */
        public void setCREATED(XMLGregorianCalendar value) {
            this.created = value;
        }

        /**
         * CHECKSUM (string/O): Provides a checksum value for the associated file or wrapped content.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getCHECKSUM() {
            return checksum;
        }

        /**
         * Sets the value of the checksum property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getCHECKSUM()
         */
        public void setCHECKSUM(String value) {
            this.checksum = value;
        }

        /**
         * CHECKSUMTYPE (enumerated string/O): Specifies the checksum algorithm used to produce the value contained in the CHECKSUM attribute. 
         *           Suggested attribute values: https://github.com/mets/METS-schema/wiki/METS2-Suggested-Attribute-Values#checksumtype-mdref-mdwrap
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getCHECKSUMTYPE() {
            return checksumtype;
        }

        /**
         * Sets the value of the checksumtype property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getCHECKSUMTYPE()
         */
        public void setCHECKSUMTYPE(String value) {
            this.checksumtype = value;
        }

        /**
         * LOCREF (string/R): Specifies the location for resources. This may be a directly-resolvable URL (preferred for interoperability), or it may require the use of an external resolver or be system-specific. The LOCTYPE attribute identifies the type of location.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getLOCREF() {
            return locref;
        }

        /**
         * Sets the value of the locref property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getLOCREF()
         */
        public void setLOCREF(String value) {
            this.locref = value;
        }

        /**
         * LOCTYPE (string/R): Specifies the locator type used in the LOCREF attribute.
         *             Suggested attribute values: https://github.com/mets/METS-schema/wiki/METS2-Suggested-Attribute-Values#loctype-mptr-mdref-flocat
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getLOCTYPE() {
            return loctype;
        }

        /**
         * Sets the value of the loctype property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getLOCTYPE()
         */
        public void setLOCTYPE(String value) {
            this.loctype = value;
        }

    }


    /**
     * <p>Java class for anonymous complex type</p>.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.</p>
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <choice>
     *         <element name="binData" type="{http://www.w3.org/2001/XMLSchema}base64Binary" minOccurs="0"/>
     *         <element name="xmlData" minOccurs="0">
     *           <complexType>
     *             <complexContent>
     *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 <sequence>
     *                   <any processContents='lax' maxOccurs="unbounded"/>
     *                 </sequence>
     *               </restriction>
     *             </complexContent>
     *           </complexType>
     *         </element>
     *       </choice>
     *       <attGroup ref="{http://www.loc.gov/METS/v2}FILECORE"/>
     *       <attGroup ref="{http://www.loc.gov/METS/v2}METADATA"/>
     *       <attribute name="ID" type="{http://www.w3.org/2001/XMLSchema}ID" />
     *       <attribute name="LABEL" type="{http://www.w3.org/2001/XMLSchema}string" />
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "binData",
        "xmlData"
    })
    public static class MdWrap {

        /**
         * The binary data wrapper element <binData> is used to contain Base64 encoded metadata.
         * 
         */
        protected byte[] binData;
        /**
         * The xml data wrapper element <xmlData> is used to contain XML encoded metadata. The content of an <xmlData> element can be in any namespace or in no namespace. As permitted by the XML Schema Standard, the processContents attribute value for the metadata in an <xmlData> is set to “lax”. Therefore, if the source schema and its location are identified by means of an XML schemaLocation attribute, then an XML processor will validate the elements for which it can find declarations. If a source schema is not identified, or cannot be found at the specified schemaLocation, then an XML validator will check for well-formedness, but otherwise skip over the elements appearing in the <xmlData> element.
         * 
         */
        protected MdType.MdWrap.XmlData xmlData;
        /**
         * ID (ID/O): This attribute uniquely identifies the element within the METS document, and would allow the element to be referenced unambiguously from another element or document via an IDREF or an XPTR. For more information on using ID attributes for internal and external linking see Chapter 4 of the METS Primer.
         * 
         */
        @XmlAttribute(name = "ID")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        @XmlID
        @XmlSchemaType(name = "ID")
        protected String id;
        /**
         * LABEL: an optional string attribute providing a label to display to the viewer of the METS document identifying the metadata.
         * 
         */
        @XmlAttribute(name = "LABEL")
        protected String label;
        /**
         * MIMETYPE (string/O): The IANA MIME media type for the associated file or wrapped content. Some values for this attribute can be found on the IANA website.
         * 
         */
        @XmlAttribute(name = "MIMETYPE")
        protected String mimetype;
        /**
         * SIZE (long/O): Specifies the size in bytes of the associated file or wrapped content.
         * 
         */
        @XmlAttribute(name = "SIZE")
        protected Long size;
        /**
         * CREATED (dateTime/O): Specifies the date and time of creation for the associated file or wrapped content.
         * 
         */
        @XmlAttribute(name = "CREATED")
        @XmlSchemaType(name = "dateTime")
        protected XMLGregorianCalendar created;
        /**
         * CHECKSUM (string/O): Provides a checksum value for the associated file or wrapped content.
         * 
         */
        @XmlAttribute(name = "CHECKSUM")
        protected String checksum;
        /**
         * CHECKSUMTYPE (enumerated string/O): Specifies the checksum algorithm used to produce the value contained in the CHECKSUM attribute. 
         *           Suggested attribute values: https://github.com/mets/METS-schema/wiki/METS2-Suggested-Attribute-Values#checksumtype-mdref-mdwrap
         * 
         */
        @XmlAttribute(name = "CHECKSUMTYPE")
        protected String checksumtype;
        /**
         * MDTYPE (string/R): Is used to indicate the type of the associated metadata. 
         *           Suggested attribute values: https://github.com/mets/METS-schema/wiki/METS2-Suggested-Attribute-Values#mdtype-mdref-mdwrap
         * 
         */
        @XmlAttribute(name = "MDTYPE", required = true)
        protected String mdtype;
        /**
         * MDTYPEVERSION(string/O): Provides a means for recording the version of the type of metadata (as recorded in the MDTYPE attribute) that is being used.  This may represent the version of the underlying data dictionary or metadata model rather than a schema version.
         * 
         */
        @XmlAttribute(name = "MDTYPEVERSION")
        protected String mdtypeversion;

        /**
         * The binary data wrapper element <binData> is used to contain Base64 encoded metadata.
         * 
         * @return
         *     possible object is
         *     byte[]
         */
        public byte[] getBinData() {
            return binData;
        }

        /**
         * Sets the value of the binData property.
         * 
         * @param value
         *     allowed object is
         *     byte[]
         * @see #getBinData()
         */
        public void setBinData(byte[] value) {
            this.binData = value;
        }

        /**
         * The xml data wrapper element <xmlData> is used to contain XML encoded metadata. The content of an <xmlData> element can be in any namespace or in no namespace. As permitted by the XML Schema Standard, the processContents attribute value for the metadata in an <xmlData> is set to “lax”. Therefore, if the source schema and its location are identified by means of an XML schemaLocation attribute, then an XML processor will validate the elements for which it can find declarations. If a source schema is not identified, or cannot be found at the specified schemaLocation, then an XML validator will check for well-formedness, but otherwise skip over the elements appearing in the <xmlData> element.
         * 
         * @return
         *     possible object is
         *     {@link MdType.MdWrap.XmlData }
         *     
         */
        public MdType.MdWrap.XmlData getXmlData() {
            return xmlData;
        }

        /**
         * Sets the value of the xmlData property.
         * 
         * @param value
         *     allowed object is
         *     {@link MdType.MdWrap.XmlData }
         *     
         * @see #getXmlData()
         */
        public void setXmlData(MdType.MdWrap.XmlData value) {
            this.xmlData = value;
        }

        /**
         * ID (ID/O): This attribute uniquely identifies the element within the METS document, and would allow the element to be referenced unambiguously from another element or document via an IDREF or an XPTR. For more information on using ID attributes for internal and external linking see Chapter 4 of the METS Primer.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getID() {
            return id;
        }

        /**
         * Sets the value of the id property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getID()
         */
        public void setID(String value) {
            this.id = value;
        }

        /**
         * LABEL: an optional string attribute providing a label to display to the viewer of the METS document identifying the metadata.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getLABEL() {
            return label;
        }

        /**
         * Sets the value of the label property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getLABEL()
         */
        public void setLABEL(String value) {
            this.label = value;
        }

        /**
         * MIMETYPE (string/O): The IANA MIME media type for the associated file or wrapped content. Some values for this attribute can be found on the IANA website.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getMIMETYPE() {
            return mimetype;
        }

        /**
         * Sets the value of the mimetype property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getMIMETYPE()
         */
        public void setMIMETYPE(String value) {
            this.mimetype = value;
        }

        /**
         * SIZE (long/O): Specifies the size in bytes of the associated file or wrapped content.
         * 
         * @return
         *     possible object is
         *     {@link Long }
         *     
         */
        public Long getSIZE() {
            return size;
        }

        /**
         * Sets the value of the size property.
         * 
         * @param value
         *     allowed object is
         *     {@link Long }
         *     
         * @see #getSIZE()
         */
        public void setSIZE(Long value) {
            this.size = value;
        }

        /**
         * CREATED (dateTime/O): Specifies the date and time of creation for the associated file or wrapped content.
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getCREATED() {
            return created;
        }

        /**
         * Sets the value of the created property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getCREATED()
         */
        public void setCREATED(XMLGregorianCalendar value) {
            this.created = value;
        }

        /**
         * CHECKSUM (string/O): Provides a checksum value for the associated file or wrapped content.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getCHECKSUM() {
            return checksum;
        }

        /**
         * Sets the value of the checksum property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getCHECKSUM()
         */
        public void setCHECKSUM(String value) {
            this.checksum = value;
        }

        /**
         * CHECKSUMTYPE (enumerated string/O): Specifies the checksum algorithm used to produce the value contained in the CHECKSUM attribute. 
         *           Suggested attribute values: https://github.com/mets/METS-schema/wiki/METS2-Suggested-Attribute-Values#checksumtype-mdref-mdwrap
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getCHECKSUMTYPE() {
            return checksumtype;
        }

        /**
         * Sets the value of the checksumtype property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getCHECKSUMTYPE()
         */
        public void setCHECKSUMTYPE(String value) {
            this.checksumtype = value;
        }

        /**
         * MDTYPE (string/R): Is used to indicate the type of the associated metadata. 
         *           Suggested attribute values: https://github.com/mets/METS-schema/wiki/METS2-Suggested-Attribute-Values#mdtype-mdref-mdwrap
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getMDTYPE() {
            return mdtype;
        }

        /**
         * Sets the value of the mdtype property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getMDTYPE()
         */
        public void setMDTYPE(String value) {
            this.mdtype = value;
        }

        /**
         * MDTYPEVERSION(string/O): Provides a means for recording the version of the type of metadata (as recorded in the MDTYPE attribute) that is being used.  This may represent the version of the underlying data dictionary or metadata model rather than a schema version.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getMDTYPEVERSION() {
            return mdtypeversion;
        }

        /**
         * Sets the value of the mdtypeversion property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getMDTYPEVERSION()
         */
        public void setMDTYPEVERSION(String value) {
            this.mdtypeversion = value;
        }


        /**
         * <p>Java class for anonymous complex type</p>.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.</p>
         * 
         * <pre>{@code
         * <complexType>
         *   <complexContent>
         *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       <sequence>
         *         <any processContents='lax' maxOccurs="unbounded"/>
         *       </sequence>
         *     </restriction>
         *   </complexContent>
         * </complexType>
         * }</pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "any"
        })
        public static class XmlData {

            @XmlAnyElement(lax = true)
            protected List<Object> any;

            /**
             * Gets the value of the any property.
             * 
             * <p>This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the any property.</p>
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * </p>
             * <pre>
             * getAny().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link Object }
             * {@link Element }
             * </p>
             * 
             * 
             * @return
             *     The value of the any property.
             */
            public List<Object> getAny() {
                if (any == null) {
                    any = new ArrayList<>();
                }
                return this.any;
            }

        }

    }

}
