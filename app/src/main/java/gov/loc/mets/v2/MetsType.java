//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package gov.loc.mets.v2;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.namespace.QName;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAnyAttribute;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlID;
import jakarta.xml.bind.annotation.XmlIDREF;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.XmlValue;
import jakarta.xml.bind.annotation.adapters.CollapsedStringAdapter;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * metsType: Complex Type for METS Sections
 * 			A METS document consists of four possible subsidiary sections: metsHdr (METS document header), mdSec (metadata section), fileSec (file section) and structMap (structural map)
 * 
 * <p>Java class for metsType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="metsType">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element name="metsHdr" minOccurs="0">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 <sequence>
 *                   <element name="agent" maxOccurs="unbounded" minOccurs="0">
 *                     <complexType>
 *                       <complexContent>
 *                         <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           <sequence>
 *                             <element name="name" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *                             <element name="note" maxOccurs="unbounded" minOccurs="0">
 *                               <complexType>
 *                                 <simpleContent>
 *                                   <extension base="<http://www.w3.org/2001/XMLSchema>string">
 *                                     <anyAttribute processContents='lax' namespace='##other'/>
 *                                   </extension>
 *                                 </simpleContent>
 *                               </complexType>
 *                             </element>
 *                           </sequence>
 *                           <attribute name="ID" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *                           <attribute name="ROLE" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                           <attribute name="TYPE" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                         </restriction>
 *                       </complexContent>
 *                     </complexType>
 *                   </element>
 *                   <element name="altRecordID" maxOccurs="unbounded" minOccurs="0">
 *                     <complexType>
 *                       <simpleContent>
 *                         <extension base="<http://www.w3.org/2001/XMLSchema>string">
 *                           <attribute name="ID" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *                           <attribute name="TYPE" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                         </extension>
 *                       </simpleContent>
 *                     </complexType>
 *                   </element>
 *                   <element name="metsDocumentID" minOccurs="0">
 *                     <complexType>
 *                       <simpleContent>
 *                         <extension base="<http://www.w3.org/2001/XMLSchema>string">
 *                           <attribute name="ID" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *                           <attribute name="TYPE" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                         </extension>
 *                       </simpleContent>
 *                     </complexType>
 *                   </element>
 *                 </sequence>
 *                 <attribute name="ID" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *                 <attribute name="MDID" type="{http://www.w3.org/2001/XMLSchema}IDREFS" />
 *                 <attribute name="CREATEDATE" type="{http://www.w3.org/2001/XMLSchema}dateTime" />
 *                 <attribute name="LASTMODDATE" type="{http://www.w3.org/2001/XMLSchema}dateTime" />
 *                 <attribute name="RECORDSTATUS" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 <anyAttribute processContents='lax' namespace='##other'/>
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *         <element name="mdSec" type="{http://www.loc.gov/METS/v2}mdSecType" minOccurs="0"/>
 *         <element name="fileSec" minOccurs="0">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 <choice>
 *                   <element name="fileGrp" maxOccurs="unbounded">
 *                     <complexType>
 *                       <complexContent>
 *                         <extension base="{http://www.loc.gov/METS/v2}fileGrpType">
 *                           <anyAttribute processContents='lax' namespace='##other'/>
 *                         </extension>
 *                       </complexContent>
 *                     </complexType>
 *                   </element>
 *                   <element name="file" type="{http://www.loc.gov/METS/v2}fileType" maxOccurs="unbounded"/>
 *                 </choice>
 *                 <attribute name="ID" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *                 <anyAttribute processContents='lax' namespace='##other'/>
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *         <element name="structSec" minOccurs="0">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 <sequence>
 *                   <element name="structMap" type="{http://www.loc.gov/METS/v2}structMapType" maxOccurs="unbounded"/>
 *                 </sequence>
 *                 <attribute name="ID" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *       </sequence>
 *       <attribute name="ID" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *       <attribute name="OBJID" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       <attribute name="LABEL" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       <attribute name="TYPE" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       <attribute name="PROFILE" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       <anyAttribute processContents='lax' namespace='##other'/>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "metsType", propOrder = {
    "metsHdr",
    "mdSec",
    "fileSec",
    "structSec"
})
@XmlSeeAlso({
    Mets.class
})
public class MetsType {

    /**
     * The mets header element <metsHdr> captures metadata about the METS document itself, not the digital object the METS document encodes. Although it records a more limited set of metadata, it is very similar in function and purpose to the headers employed in other schema such as the Text Encoding Initiative (TEI) or in the Encoded Archival Description (EAD).
     * 
     */
    protected MetsType.MetsHdr metsHdr;
    /**
     * The metadata section <mdSec> contains the metadata pertaining to the digital object, its components and any original source material from which the digital object is derived. The <mdSec> is separated into sub-sections that accommodate any kind of metadata such as descriptive, technical, intellectual property rights, analog/digital source metadata, and digital provenance metadata. Each of these subsections can either wrap the metadata  (mdWrap) or reference it in an external location (mdRef) or both. Multiple instances of the <mdSec> element can occur within a METS document and multiple instances of its subsections can occur in one <mdSec> element. This allows considerable flexibility in the structuring of the administrative metadata. METS does not define a vocabulary or syntax for encoding metadata. Metadata can be expressed within the mdSec sub-elements according to many current community defined standards or locally produced XML schemas.
     * 
     */
    protected MdSecType mdSec;
    /**
     * The overall purpose of the content file section element <fileSec> is to provide an inventory of and the location for the content files that comprise the digital object being described in the METS document.
     * 
     */
    protected MetsType.FileSec fileSec;
    /**
     * The <structSec> section contains the <structMap> elements that provide hierarchical organizations of the components of the digital object described by the METS document.
     * 
     */
    protected MetsType.StructSec structSec;
    /**
     * ID (ID/O): This attribute uniquely identifies the element within the METS document, and would allow the element to be referenced unambiguously from another element or document via an IDREF or an XPTR. For more information on using ID attributes for internal and external linking see Chapter 4 of the METS Primer.
     * 
     */
    @XmlAttribute(name = "ID")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    @XmlSchemaType(name = "ID")
    protected String id;
    /**
     * OBJID (string/O): Is the primary identifier assigned to the METS object as a whole. Although this attribute is not required, it is strongly recommended. This identifier is used to tag the entire METS object to external systems, in contrast with the ID identifier.
     * 
     */
    @XmlAttribute(name = "OBJID")
    protected String objid;
    /**
     * LABEL (string/O): Is a simple title string used to identify the object/entity being described in the METS document for the user.
     * 
     */
    @XmlAttribute(name = "LABEL")
    protected String label;
    /**
     * TYPE (string/O): Specifies the class or type of the object, e.g.: book, journal, stereograph, dataset, video, etc.
     * 
     */
    @XmlAttribute(name = "TYPE")
    protected String type;
    /**
     * PROFILE (string/O): Indicates to which of the registered profile(s) the METS document conforms. For additional information about PROFILES see Chapter 5 of the METS Primer.
     * 
     */
    @XmlAttribute(name = "PROFILE")
    protected String profile;
    @XmlAnyAttribute
    private Map<QName, String> otherAttributes = new HashMap<>();

    /**
     * The mets header element <metsHdr> captures metadata about the METS document itself, not the digital object the METS document encodes. Although it records a more limited set of metadata, it is very similar in function and purpose to the headers employed in other schema such as the Text Encoding Initiative (TEI) or in the Encoded Archival Description (EAD).
     * 
     * @return
     *     possible object is
     *     {@link MetsType.MetsHdr }
     *     
     */
    public MetsType.MetsHdr getMetsHdr() {
        return metsHdr;
    }

    /**
     * Sets the value of the metsHdr property.
     * 
     * @param value
     *     allowed object is
     *     {@link MetsType.MetsHdr }
     *     
     * @see #getMetsHdr()
     */
    public void setMetsHdr(MetsType.MetsHdr value) {
        this.metsHdr = value;
    }

    /**
     * The metadata section <mdSec> contains the metadata pertaining to the digital object, its components and any original source material from which the digital object is derived. The <mdSec> is separated into sub-sections that accommodate any kind of metadata such as descriptive, technical, intellectual property rights, analog/digital source metadata, and digital provenance metadata. Each of these subsections can either wrap the metadata  (mdWrap) or reference it in an external location (mdRef) or both. Multiple instances of the <mdSec> element can occur within a METS document and multiple instances of its subsections can occur in one <mdSec> element. This allows considerable flexibility in the structuring of the administrative metadata. METS does not define a vocabulary or syntax for encoding metadata. Metadata can be expressed within the mdSec sub-elements according to many current community defined standards or locally produced XML schemas.
     * 
     * @return
     *     possible object is
     *     {@link MdSecType }
     *     
     */
    public MdSecType getMdSec() {
        return mdSec;
    }

    /**
     * Sets the value of the mdSec property.
     * 
     * @param value
     *     allowed object is
     *     {@link MdSecType }
     *     
     * @see #getMdSec()
     */
    public void setMdSec(MdSecType value) {
        this.mdSec = value;
    }

    /**
     * The overall purpose of the content file section element <fileSec> is to provide an inventory of and the location for the content files that comprise the digital object being described in the METS document.
     * 
     * @return
     *     possible object is
     *     {@link MetsType.FileSec }
     *     
     */
    public MetsType.FileSec getFileSec() {
        return fileSec;
    }

    /**
     * Sets the value of the fileSec property.
     * 
     * @param value
     *     allowed object is
     *     {@link MetsType.FileSec }
     *     
     * @see #getFileSec()
     */
    public void setFileSec(MetsType.FileSec value) {
        this.fileSec = value;
    }

    /**
     * The <structSec> section contains the <structMap> elements that provide hierarchical organizations of the components of the digital object described by the METS document.
     * 
     * @return
     *     possible object is
     *     {@link MetsType.StructSec }
     *     
     */
    public MetsType.StructSec getStructSec() {
        return structSec;
    }

    /**
     * Sets the value of the structSec property.
     * 
     * @param value
     *     allowed object is
     *     {@link MetsType.StructSec }
     *     
     * @see #getStructSec()
     */
    public void setStructSec(MetsType.StructSec value) {
        this.structSec = value;
    }

    /**
     * ID (ID/O): This attribute uniquely identifies the element within the METS document, and would allow the element to be referenced unambiguously from another element or document via an IDREF or an XPTR. For more information on using ID attributes for internal and external linking see Chapter 4 of the METS Primer.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getID() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getID()
     */
    public void setID(String value) {
        this.id = value;
    }

    /**
     * OBJID (string/O): Is the primary identifier assigned to the METS object as a whole. Although this attribute is not required, it is strongly recommended. This identifier is used to tag the entire METS object to external systems, in contrast with the ID identifier.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getOBJID() {
        return objid;
    }

    /**
     * Sets the value of the objid property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getOBJID()
     */
    public void setOBJID(String value) {
        this.objid = value;
    }

    /**
     * LABEL (string/O): Is a simple title string used to identify the object/entity being described in the METS document for the user.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLABEL() {
        return label;
    }

    /**
     * Sets the value of the label property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getLABEL()
     */
    public void setLABEL(String value) {
        this.label = value;
    }

    /**
     * TYPE (string/O): Specifies the class or type of the object, e.g.: book, journal, stereograph, dataset, video, etc.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTYPE() {
        return type;
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getTYPE()
     */
    public void setTYPE(String value) {
        this.type = value;
    }

    /**
     * PROFILE (string/O): Indicates to which of the registered profile(s) the METS document conforms. For additional information about PROFILES see Chapter 5 of the METS Primer.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPROFILE() {
        return profile;
    }

    /**
     * Sets the value of the profile property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getPROFILE()
     */
    public void setPROFILE(String value) {
        this.profile = value;
    }

    /**
     * Gets a map that contains attributes that aren't bound to any typed property on this class.
     * 
     * <p>
     * the map is keyed by the name of the attribute and 
     * the value is the string value of the attribute.
     * 
     * the map returned by this method is live, and you can add new attribute
     * by updating the map directly. Because of this design, there's no setter.
     * 
     * 
     * @return
     *     always non-null
     */
    public Map<QName, String> getOtherAttributes() {
        return otherAttributes;
    }


    /**
     * <p>Java class for anonymous complex type</p>.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.</p>
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <choice>
     *         <element name="fileGrp" maxOccurs="unbounded">
     *           <complexType>
     *             <complexContent>
     *               <extension base="{http://www.loc.gov/METS/v2}fileGrpType">
     *                 <anyAttribute processContents='lax' namespace='##other'/>
     *               </extension>
     *             </complexContent>
     *           </complexType>
     *         </element>
     *         <element name="file" type="{http://www.loc.gov/METS/v2}fileType" maxOccurs="unbounded"/>
     *       </choice>
     *       <attribute name="ID" type="{http://www.w3.org/2001/XMLSchema}ID" />
     *       <anyAttribute processContents='lax' namespace='##other'/>
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "fileGrp",
        "file"
    })
    public static class FileSec {

        /**
         * A sequence of file group elements <fileGrp> can be used to group the digital files comprising the content of a METS object. In the case where the content files are images of different formats and resolutions, for example, one could group the image content files by format and create a separate <fileGrp> for each image format/resolution such as:
         * -- one <fileGrp> for the thumbnails of the images
         * -- one <fileGrp> for the higher resolution JPEGs of the image
         * -- one <fileGrp> for the master archival TIFFs of the images
         * A <fileGrp> may contain zero or more <file> elements.
         * 
         */
        protected List<MetsType.FileSec.FileGrp> fileGrp;
        /**
         * The file element <file> provides access to the content files for the digital object being described by the METS document. A <file> element may contain one or more <FLocat> elements which provide pointers to a content file and/or a <FContent> element which wraps an encoded version of the file. Embedding files using <FContent> can be a valuable feature for exchanging digital objects between repositories or for archiving versions of digital objects for off-site storage. All <FLocat> and <FContent> elements should identify and/or contain identical copies of a single file. The <file> element is recursive, thus allowing sub-files or component files of a larger file to be listed in the inventory. Alternatively, by using the <stream> element, a smaller component of a file or of a related file can be placed within a <file> element. Finally, by using the <transformFile> element, it is possible to include within a <file> element a different version of a file that has undergone a transformation for some reason, such as format migration.
         * 
         */
        protected List<FileType> file;
        /**
         * ID (ID/O): This attribute uniquely identifies the element within the METS document, and would allow the element to be referenced unambiguously from another element or document via an IDREF or an XPTR. For more information on using ID attributes for internal and external linking see Chapter 4 of the METS Primer.
         * 
         */
        @XmlAttribute(name = "ID")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        @XmlID
        @XmlSchemaType(name = "ID")
        protected String id;
        @XmlAnyAttribute
        private Map<QName, String> otherAttributes = new HashMap<>();

        /**
         * A sequence of file group elements <fileGrp> can be used to group the digital files comprising the content of a METS object. In the case where the content files are images of different formats and resolutions, for example, one could group the image content files by format and create a separate <fileGrp> for each image format/resolution such as:
         * -- one <fileGrp> for the thumbnails of the images
         * -- one <fileGrp> for the higher resolution JPEGs of the image
         * -- one <fileGrp> for the master archival TIFFs of the images
         * A <fileGrp> may contain zero or more <file> elements.
         * 
         * Gets the value of the fileGrp property.
         * 
         * <p>This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the fileGrp property.</p>
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * </p>
         * <pre>
         * getFileGrp().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link MetsType.FileSec.FileGrp }
         * </p>
         * 
         * 
         * @return
         *     The value of the fileGrp property.
         */
        public List<MetsType.FileSec.FileGrp> getFileGrp() {
            if (fileGrp == null) {
                fileGrp = new ArrayList<>();
            }
            return this.fileGrp;
        }

        /**
         * The file element <file> provides access to the content files for the digital object being described by the METS document. A <file> element may contain one or more <FLocat> elements which provide pointers to a content file and/or a <FContent> element which wraps an encoded version of the file. Embedding files using <FContent> can be a valuable feature for exchanging digital objects between repositories or for archiving versions of digital objects for off-site storage. All <FLocat> and <FContent> elements should identify and/or contain identical copies of a single file. The <file> element is recursive, thus allowing sub-files or component files of a larger file to be listed in the inventory. Alternatively, by using the <stream> element, a smaller component of a file or of a related file can be placed within a <file> element. Finally, by using the <transformFile> element, it is possible to include within a <file> element a different version of a file that has undergone a transformation for some reason, such as format migration.
         * 
         * Gets the value of the file property.
         * 
         * <p>This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the file property.</p>
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * </p>
         * <pre>
         * getFile().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link FileType }
         * </p>
         * 
         * 
         * @return
         *     The value of the file property.
         */
        public List<FileType> getFile() {
            if (file == null) {
                file = new ArrayList<>();
            }
            return this.file;
        }

        /**
         * ID (ID/O): This attribute uniquely identifies the element within the METS document, and would allow the element to be referenced unambiguously from another element or document via an IDREF or an XPTR. For more information on using ID attributes for internal and external linking see Chapter 4 of the METS Primer.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getID() {
            return id;
        }

        /**
         * Sets the value of the id property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getID()
         */
        public void setID(String value) {
            this.id = value;
        }

        /**
         * Gets a map that contains attributes that aren't bound to any typed property on this class.
         * 
         * <p>
         * the map is keyed by the name of the attribute and 
         * the value is the string value of the attribute.
         * 
         * the map returned by this method is live, and you can add new attribute
         * by updating the map directly. Because of this design, there's no setter.
         * 
         * 
         * @return
         *     always non-null
         */
        public Map<QName, String> getOtherAttributes() {
            return otherAttributes;
        }


        /**
         * <p>Java class for anonymous complex type</p>.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.</p>
         * 
         * <pre>{@code
         * <complexType>
         *   <complexContent>
         *     <extension base="{http://www.loc.gov/METS/v2}fileGrpType">
         *       <anyAttribute processContents='lax' namespace='##other'/>
         *     </extension>
         *   </complexContent>
         * </complexType>
         * }</pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "")
        public static class FileGrp
            extends FileGrpType
        {


        }

    }


    /**
     * <p>Java class for anonymous complex type</p>.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.</p>
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <sequence>
     *         <element name="agent" maxOccurs="unbounded" minOccurs="0">
     *           <complexType>
     *             <complexContent>
     *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 <sequence>
     *                   <element name="name" type="{http://www.w3.org/2001/XMLSchema}string"/>
     *                   <element name="note" maxOccurs="unbounded" minOccurs="0">
     *                     <complexType>
     *                       <simpleContent>
     *                         <extension base="<http://www.w3.org/2001/XMLSchema>string">
     *                           <anyAttribute processContents='lax' namespace='##other'/>
     *                         </extension>
     *                       </simpleContent>
     *                     </complexType>
     *                   </element>
     *                 </sequence>
     *                 <attribute name="ID" type="{http://www.w3.org/2001/XMLSchema}ID" />
     *                 <attribute name="ROLE" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
     *                 <attribute name="TYPE" type="{http://www.w3.org/2001/XMLSchema}string" />
     *               </restriction>
     *             </complexContent>
     *           </complexType>
     *         </element>
     *         <element name="altRecordID" maxOccurs="unbounded" minOccurs="0">
     *           <complexType>
     *             <simpleContent>
     *               <extension base="<http://www.w3.org/2001/XMLSchema>string">
     *                 <attribute name="ID" type="{http://www.w3.org/2001/XMLSchema}ID" />
     *                 <attribute name="TYPE" type="{http://www.w3.org/2001/XMLSchema}string" />
     *               </extension>
     *             </simpleContent>
     *           </complexType>
     *         </element>
     *         <element name="metsDocumentID" minOccurs="0">
     *           <complexType>
     *             <simpleContent>
     *               <extension base="<http://www.w3.org/2001/XMLSchema>string">
     *                 <attribute name="ID" type="{http://www.w3.org/2001/XMLSchema}ID" />
     *                 <attribute name="TYPE" type="{http://www.w3.org/2001/XMLSchema}string" />
     *               </extension>
     *             </simpleContent>
     *           </complexType>
     *         </element>
     *       </sequence>
     *       <attribute name="ID" type="{http://www.w3.org/2001/XMLSchema}ID" />
     *       <attribute name="MDID" type="{http://www.w3.org/2001/XMLSchema}IDREFS" />
     *       <attribute name="CREATEDATE" type="{http://www.w3.org/2001/XMLSchema}dateTime" />
     *       <attribute name="LASTMODDATE" type="{http://www.w3.org/2001/XMLSchema}dateTime" />
     *       <attribute name="RECORDSTATUS" type="{http://www.w3.org/2001/XMLSchema}string" />
     *       <anyAttribute processContents='lax' namespace='##other'/>
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "agent",
        "altRecordID",
        "metsDocumentID"
    })
    public static class MetsHdr {

        /**
         * agent: 
         * 								The agent element <agent> provides for various parties and their roles with respect to the METS record to be documented.
         * 
         */
        protected List<MetsType.MetsHdr.Agent> agent;
        /**
         * The alternative record identifier element <altRecordID> allows one to use alternative record identifier values for the digital object represented by the METS document; the primary record identifier is stored in the OBJID attribute in the root <mets> element.
         * 
         */
        protected List<MetsType.MetsHdr.AltRecordID> altRecordID;
        /**
         * The metsDocument identifier element <metsDocumentID> allows a unique identifier to be assigned to the METS document itself.  This may be different from the OBJID attribute value in the root <mets> element, which uniquely identifies the entire digital object represented by the METS document.
         * 
         */
        protected MetsType.MetsHdr.MetsDocumentID metsDocumentID;
        /**
         * ID (ID/O): This attribute uniquely identifies the element within the METS document, and would allow the element to be referenced unambiguously from another element or document via an IDREF or an XPTR. For more information on using ID attributes for internal and external linking see Chapter 4 of the METS Primer.
         * 
         */
        @XmlAttribute(name = "ID")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        @XmlID
        @XmlSchemaType(name = "ID")
        protected String id;
        /**
         * MDID (IDREFS/O): Contains the ID attribute values of the <md> elements within the <mdSec> of the METS document that contain metadata pertaining to the METS document itself.  For more information on using METS IDREFS and IDREF type attributes for internal linking, see Chapter 4 of the METS Primer.
         * 
         */
        @XmlAttribute(name = "MDID")
        @XmlIDREF
        @XmlSchemaType(name = "IDREFS")
        protected List<Object> mdid;
        /**
         * CREATEDATE (dateTime/O): Records the date/time the METS document was created.
         * 
         */
        @XmlAttribute(name = "CREATEDATE")
        @XmlSchemaType(name = "dateTime")
        protected XMLGregorianCalendar createdate;
        /**
         * LASTMODDATE (dateTime/O): Is used to indicate the date/time the METS document was last modified.
         * 
         */
        @XmlAttribute(name = "LASTMODDATE")
        @XmlSchemaType(name = "dateTime")
        protected XMLGregorianCalendar lastmoddate;
        /**
         * RECORDSTATUS (string/O): Specifies the status of the METS document. It is used for internal processing purposes.
         * 
         */
        @XmlAttribute(name = "RECORDSTATUS")
        protected String recordstatus;
        @XmlAnyAttribute
        private Map<QName, String> otherAttributes = new HashMap<>();

        /**
         * agent: 
         * 								The agent element <agent> provides for various parties and their roles with respect to the METS record to be documented.
         * 
         * Gets the value of the agent property.
         * 
         * <p>This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the agent property.</p>
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * </p>
         * <pre>
         * getAgent().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link MetsType.MetsHdr.Agent }
         * </p>
         * 
         * 
         * @return
         *     The value of the agent property.
         */
        public List<MetsType.MetsHdr.Agent> getAgent() {
            if (agent == null) {
                agent = new ArrayList<>();
            }
            return this.agent;
        }

        /**
         * The alternative record identifier element <altRecordID> allows one to use alternative record identifier values for the digital object represented by the METS document; the primary record identifier is stored in the OBJID attribute in the root <mets> element.
         * 
         * Gets the value of the altRecordID property.
         * 
         * <p>This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the altRecordID property.</p>
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * </p>
         * <pre>
         * getAltRecordID().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link MetsType.MetsHdr.AltRecordID }
         * </p>
         * 
         * 
         * @return
         *     The value of the altRecordID property.
         */
        public List<MetsType.MetsHdr.AltRecordID> getAltRecordID() {
            if (altRecordID == null) {
                altRecordID = new ArrayList<>();
            }
            return this.altRecordID;
        }

        /**
         * The metsDocument identifier element <metsDocumentID> allows a unique identifier to be assigned to the METS document itself.  This may be different from the OBJID attribute value in the root <mets> element, which uniquely identifies the entire digital object represented by the METS document.
         * 
         * @return
         *     possible object is
         *     {@link MetsType.MetsHdr.MetsDocumentID }
         *     
         */
        public MetsType.MetsHdr.MetsDocumentID getMetsDocumentID() {
            return metsDocumentID;
        }

        /**
         * Sets the value of the metsDocumentID property.
         * 
         * @param value
         *     allowed object is
         *     {@link MetsType.MetsHdr.MetsDocumentID }
         *     
         * @see #getMetsDocumentID()
         */
        public void setMetsDocumentID(MetsType.MetsHdr.MetsDocumentID value) {
            this.metsDocumentID = value;
        }

        /**
         * ID (ID/O): This attribute uniquely identifies the element within the METS document, and would allow the element to be referenced unambiguously from another element or document via an IDREF or an XPTR. For more information on using ID attributes for internal and external linking see Chapter 4 of the METS Primer.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getID() {
            return id;
        }

        /**
         * Sets the value of the id property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getID()
         */
        public void setID(String value) {
            this.id = value;
        }

        /**
         * MDID (IDREFS/O): Contains the ID attribute values of the <md> elements within the <mdSec> of the METS document that contain metadata pertaining to the METS document itself.  For more information on using METS IDREFS and IDREF type attributes for internal linking, see Chapter 4 of the METS Primer.
         * 
         * Gets the value of the mdid property.
         * 
         * <p>This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the mdid property.</p>
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * </p>
         * <pre>
         * getMDID().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link Object }
         * </p>
         * 
         * 
         * @return
         *     The value of the mdid property.
         */
        public List<Object> getMDID() {
            if (mdid == null) {
                mdid = new ArrayList<>();
            }
            return this.mdid;
        }

        /**
         * CREATEDATE (dateTime/O): Records the date/time the METS document was created.
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getCREATEDATE() {
            return createdate;
        }

        /**
         * Sets the value of the createdate property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getCREATEDATE()
         */
        public void setCREATEDATE(XMLGregorianCalendar value) {
            this.createdate = value;
        }

        /**
         * LASTMODDATE (dateTime/O): Is used to indicate the date/time the METS document was last modified.
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getLASTMODDATE() {
            return lastmoddate;
        }

        /**
         * Sets the value of the lastmoddate property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         * @see #getLASTMODDATE()
         */
        public void setLASTMODDATE(XMLGregorianCalendar value) {
            this.lastmoddate = value;
        }

        /**
         * RECORDSTATUS (string/O): Specifies the status of the METS document. It is used for internal processing purposes.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getRECORDSTATUS() {
            return recordstatus;
        }

        /**
         * Sets the value of the recordstatus property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getRECORDSTATUS()
         */
        public void setRECORDSTATUS(String value) {
            this.recordstatus = value;
        }

        /**
         * Gets a map that contains attributes that aren't bound to any typed property on this class.
         * 
         * <p>
         * the map is keyed by the name of the attribute and 
         * the value is the string value of the attribute.
         * 
         * the map returned by this method is live, and you can add new attribute
         * by updating the map directly. Because of this design, there's no setter.
         * 
         * 
         * @return
         *     always non-null
         */
        public Map<QName, String> getOtherAttributes() {
            return otherAttributes;
        }


        /**
         * <p>Java class for anonymous complex type</p>.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.</p>
         * 
         * <pre>{@code
         * <complexType>
         *   <complexContent>
         *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       <sequence>
         *         <element name="name" type="{http://www.w3.org/2001/XMLSchema}string"/>
         *         <element name="note" maxOccurs="unbounded" minOccurs="0">
         *           <complexType>
         *             <simpleContent>
         *               <extension base="<http://www.w3.org/2001/XMLSchema>string">
         *                 <anyAttribute processContents='lax' namespace='##other'/>
         *               </extension>
         *             </simpleContent>
         *           </complexType>
         *         </element>
         *       </sequence>
         *       <attribute name="ID" type="{http://www.w3.org/2001/XMLSchema}ID" />
         *       <attribute name="ROLE" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
         *       <attribute name="TYPE" type="{http://www.w3.org/2001/XMLSchema}string" />
         *     </restriction>
         *   </complexContent>
         * </complexType>
         * }</pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "name",
            "note"
        })
        public static class Agent {

            /**
             * The element <name> can be used to record the full name of the document agent.
             * 
             */
            @XmlElement(required = true)
            protected String name;
            /**
             * The <note> element can be used to record any additional information regarding the agent's activities with respect to the METS document.
             * 
             */
            protected List<MetsType.MetsHdr.Agent.Note> note;
            /**
             * ID (ID/O): This attribute uniquely identifies the element within the METS document, and would allow the element to be referenced unambiguously from another element or document via an IDREF or an XPTR. For more information on using ID attributes for internal and external linking see Chapter 4 of the METS Primer.
             * 
             */
            @XmlAttribute(name = "ID")
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            @XmlID
            @XmlSchemaType(name = "ID")
            protected String id;
            /**
             * ROLE (string/R): Specifies the function of the agent with respect to the METS record. 
             *                       Suggested attribute values: https://github.com/mets/METS-schema/wiki/METS2-Suggested-Attribute-Values#agentrole
             * 
             */
            @XmlAttribute(name = "ROLE", required = true)
            protected String role;
            /**
             * TYPE (string/O): is used to specify the type of AGENT.
             *                       Suggested attribute values: https://github.com/mets/METS-schema/wiki/METS2-Suggested-Attribute-Values#agenttype
             * 
             */
            @XmlAttribute(name = "TYPE")
            protected String type;

            /**
             * The element <name> can be used to record the full name of the document agent.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getName() {
                return name;
            }

            /**
             * Sets the value of the name property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             * @see #getName()
             */
            public void setName(String value) {
                this.name = value;
            }

            /**
             * The <note> element can be used to record any additional information regarding the agent's activities with respect to the METS document.
             * 
             * Gets the value of the note property.
             * 
             * <p>This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the note property.</p>
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * </p>
             * <pre>
             * getNote().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link MetsType.MetsHdr.Agent.Note }
             * </p>
             * 
             * 
             * @return
             *     The value of the note property.
             */
            public List<MetsType.MetsHdr.Agent.Note> getNote() {
                if (note == null) {
                    note = new ArrayList<>();
                }
                return this.note;
            }

            /**
             * ID (ID/O): This attribute uniquely identifies the element within the METS document, and would allow the element to be referenced unambiguously from another element or document via an IDREF or an XPTR. For more information on using ID attributes for internal and external linking see Chapter 4 of the METS Primer.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getID() {
                return id;
            }

            /**
             * Sets the value of the id property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             * @see #getID()
             */
            public void setID(String value) {
                this.id = value;
            }

            /**
             * ROLE (string/R): Specifies the function of the agent with respect to the METS record. 
             *                       Suggested attribute values: https://github.com/mets/METS-schema/wiki/METS2-Suggested-Attribute-Values#agentrole
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getROLE() {
                return role;
            }

            /**
             * Sets the value of the role property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             * @see #getROLE()
             */
            public void setROLE(String value) {
                this.role = value;
            }

            /**
             * TYPE (string/O): is used to specify the type of AGENT.
             *                       Suggested attribute values: https://github.com/mets/METS-schema/wiki/METS2-Suggested-Attribute-Values#agenttype
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getTYPE() {
                return type;
            }

            /**
             * Sets the value of the type property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             * @see #getTYPE()
             */
            public void setTYPE(String value) {
                this.type = value;
            }


            /**
             * <p>Java class for anonymous complex type</p>.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.</p>
             * 
             * <pre>{@code
             * <complexType>
             *   <simpleContent>
             *     <extension base="<http://www.w3.org/2001/XMLSchema>string">
             *       <anyAttribute processContents='lax' namespace='##other'/>
             *     </extension>
             *   </simpleContent>
             * </complexType>
             * }</pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "value"
            })
            public static class Note {

                @XmlValue
                protected String value;
                @XmlAnyAttribute
                private Map<QName, String> otherAttributes = new HashMap<>();

                /**
                 * Gets the value of the value property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getValue() {
                    return value;
                }

                /**
                 * Sets the value of the value property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setValue(String value) {
                    this.value = value;
                }

                /**
                 * Gets a map that contains attributes that aren't bound to any typed property on this class.
                 * 
                 * <p>
                 * the map is keyed by the name of the attribute and 
                 * the value is the string value of the attribute.
                 * 
                 * the map returned by this method is live, and you can add new attribute
                 * by updating the map directly. Because of this design, there's no setter.
                 * 
                 * 
                 * @return
                 *     always non-null
                 */
                public Map<QName, String> getOtherAttributes() {
                    return otherAttributes;
                }

            }

        }


        /**
         * <p>Java class for anonymous complex type</p>.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.</p>
         * 
         * <pre>{@code
         * <complexType>
         *   <simpleContent>
         *     <extension base="<http://www.w3.org/2001/XMLSchema>string">
         *       <attribute name="ID" type="{http://www.w3.org/2001/XMLSchema}ID" />
         *       <attribute name="TYPE" type="{http://www.w3.org/2001/XMLSchema}string" />
         *     </extension>
         *   </simpleContent>
         * </complexType>
         * }</pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "value"
        })
        public static class AltRecordID {

            @XmlValue
            protected String value;
            /**
             * ID (ID/O): This attribute uniquely identifies the element within the METS document, and would allow the element to be referenced unambiguously from another element or document via an IDREF or an XPTR. For more information on using ID attributes for internal and external linking see Chapter 4 of the METS Primer.
             * 
             */
            @XmlAttribute(name = "ID")
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            @XmlID
            @XmlSchemaType(name = "ID")
            protected String id;
            /**
             * TYPE (string/O): A description of the identifier type (e.g., OCLC record number, LCCN, etc.).
             * 
             */
            @XmlAttribute(name = "TYPE")
            protected String type;

            /**
             * Gets the value of the value property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getValue() {
                return value;
            }

            /**
             * Sets the value of the value property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setValue(String value) {
                this.value = value;
            }

            /**
             * ID (ID/O): This attribute uniquely identifies the element within the METS document, and would allow the element to be referenced unambiguously from another element or document via an IDREF or an XPTR. For more information on using ID attributes for internal and external linking see Chapter 4 of the METS Primer.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getID() {
                return id;
            }

            /**
             * Sets the value of the id property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             * @see #getID()
             */
            public void setID(String value) {
                this.id = value;
            }

            /**
             * TYPE (string/O): A description of the identifier type (e.g., OCLC record number, LCCN, etc.).
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getTYPE() {
                return type;
            }

            /**
             * Sets the value of the type property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             * @see #getTYPE()
             */
            public void setTYPE(String value) {
                this.type = value;
            }

        }


        /**
         * <p>Java class for anonymous complex type</p>.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.</p>
         * 
         * <pre>{@code
         * <complexType>
         *   <simpleContent>
         *     <extension base="<http://www.w3.org/2001/XMLSchema>string">
         *       <attribute name="ID" type="{http://www.w3.org/2001/XMLSchema}ID" />
         *       <attribute name="TYPE" type="{http://www.w3.org/2001/XMLSchema}string" />
         *     </extension>
         *   </simpleContent>
         * </complexType>
         * }</pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "value"
        })
        public static class MetsDocumentID {

            @XmlValue
            protected String value;
            /**
             * ID (ID/O): This attribute uniquely identifies the element within the METS document, and would allow the element to be referenced unambiguously from another element or document via an IDREF or an XPTR. For more information on using ID attributes for internal and external linking see Chapter 4 of the METS Primer.
             * 
             */
            @XmlAttribute(name = "ID")
            @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
            @XmlID
            @XmlSchemaType(name = "ID")
            protected String id;
            /**
             * TYPE (string/O): A description of the identifier type.
             * 
             */
            @XmlAttribute(name = "TYPE")
            protected String type;

            /**
             * Gets the value of the value property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getValue() {
                return value;
            }

            /**
             * Sets the value of the value property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setValue(String value) {
                this.value = value;
            }

            /**
             * ID (ID/O): This attribute uniquely identifies the element within the METS document, and would allow the element to be referenced unambiguously from another element or document via an IDREF or an XPTR. For more information on using ID attributes for internal and external linking see Chapter 4 of the METS Primer.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getID() {
                return id;
            }

            /**
             * Sets the value of the id property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             * @see #getID()
             */
            public void setID(String value) {
                this.id = value;
            }

            /**
             * TYPE (string/O): A description of the identifier type.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getTYPE() {
                return type;
            }

            /**
             * Sets the value of the type property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             * @see #getTYPE()
             */
            public void setTYPE(String value) {
                this.type = value;
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type</p>.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.</p>
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <sequence>
     *         <element name="structMap" type="{http://www.loc.gov/METS/v2}structMapType" maxOccurs="unbounded"/>
     *       </sequence>
     *       <attribute name="ID" type="{http://www.w3.org/2001/XMLSchema}ID" />
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "structMap"
    })
    public static class StructSec {

        /**
         * The structural map section <structMap> is the heart of a METS document. It provides a means for organizing the digital content represented by the <file> elements in the <fileSec> of the METS document into a coherent hierarchical structure. Such a hierarchical structure can be presented to users to facilitate their comprehension and navigation of the digital content. It can further be applied to any purpose requiring an understanding of the structural relationship of the content files or parts of the content files. The organization may be specified to any level of granularity (intellectual and or physical) that is desired. Since the <structMap> element is repeatable, more than one organization can be applied to the digital content represented by the METS document.  The hierarchical structure specified by a <structMap> is encoded as a tree of nested <div> elements. A <div> element may directly point to content via child file pointer <fptr> elements (if the content is represented in the <fileSec<) or child METS pointer <mptr> elements (if the content is represented by an external METS document). The <fptr> element may point to a single whole <file> element that manifests its parent <div<, or to part of a <file> that manifests its <div<. It can also point to multiple files or parts of files that must be played/displayed either in sequence or in parallel to reveal its structural division. In addition to providing a means for organizing content, the <structMap> provides a mechanism for linking content at any hierarchical level with relevant descriptive and administrative metadata.
         * 
         */
        @XmlElement(required = true)
        protected List<StructMapType> structMap;
        /**
         * ID (ID/O): This attribute uniquely identifies the element within the METS document, and would allow the element to be referenced unambiguously from another element or document via an IDREF or an XPTR. For more information on using ID attributes for internal and external linking see Chapter 4 of the METS Primer.
         * 
         */
        @XmlAttribute(name = "ID")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        @XmlID
        @XmlSchemaType(name = "ID")
        protected String id;

        /**
         * The structural map section <structMap> is the heart of a METS document. It provides a means for organizing the digital content represented by the <file> elements in the <fileSec> of the METS document into a coherent hierarchical structure. Such a hierarchical structure can be presented to users to facilitate their comprehension and navigation of the digital content. It can further be applied to any purpose requiring an understanding of the structural relationship of the content files or parts of the content files. The organization may be specified to any level of granularity (intellectual and or physical) that is desired. Since the <structMap> element is repeatable, more than one organization can be applied to the digital content represented by the METS document.  The hierarchical structure specified by a <structMap> is encoded as a tree of nested <div> elements. A <div> element may directly point to content via child file pointer <fptr> elements (if the content is represented in the <fileSec<) or child METS pointer <mptr> elements (if the content is represented by an external METS document). The <fptr> element may point to a single whole <file> element that manifests its parent <div<, or to part of a <file> that manifests its <div<. It can also point to multiple files or parts of files that must be played/displayed either in sequence or in parallel to reveal its structural division. In addition to providing a means for organizing content, the <structMap> provides a mechanism for linking content at any hierarchical level with relevant descriptive and administrative metadata.
         * 
         * Gets the value of the structMap property.
         * 
         * <p>This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the structMap property.</p>
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * </p>
         * <pre>
         * getStructMap().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link StructMapType }
         * </p>
         * 
         * 
         * @return
         *     The value of the structMap property.
         */
        public List<StructMapType> getStructMap() {
            if (structMap == null) {
                structMap = new ArrayList<>();
            }
            return this.structMap;
        }

        /**
         * ID (ID/O): This attribute uniquely identifies the element within the METS document, and would allow the element to be referenced unambiguously from another element or document via an IDREF or an XPTR. For more information on using ID attributes for internal and external linking see Chapter 4 of the METS Primer.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getID() {
            return id;
        }

        /**
         * Sets the value of the id property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         * @see #getID()
         */
        public void setID(String value) {
            this.id = value;
        }

    }

}
